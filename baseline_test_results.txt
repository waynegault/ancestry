
ANCESTRY PROJECT - COMPREHENSIVE TEST SUITE
============================================================

🧹 LINTER: Ruff not available, skipping linting checks...
🔍 QUALITY: Running Python best practices checks...
✅ action10.py: Quality score 89.1/100
✅ action11.py: Quality score 76.9/100
⚠️  utils.py: Quality score 21.6/100 (below threshold)
⚠️  main.py: Quality score 31.1/100 (below threshold)
✅ code_quality_checker.py: Quality score 100.0/100
📊 Average quality score: 63.7/100
⚠️  Quality score below recommended threshold (70)
⚠️  Quality checks failed - continuing with tests but consider improvements
📊 Found 62 test modules (62 with enhanced descriptions)

============================================================
🧪 RUNNING TESTS
============================================================
🔄 Running tests sequentially...

🧪 [ 1/62] Testing: action10.py
   📝 GEDCOM Analysis & Advanced Genealogical Intelligence Engine
   ✅ PASSED | Duration: 39.73s | 5 tests | Quality: 89.1/100 📊 (2 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • action10_module_tests: is too long (981 lines)
      Complexity: 1 issue(s)
        • action10_module_tests: is too complex (complexity: 52)

🧪 [ 2/62] Testing: action11.py
   📝 Action 11: Ancestry API Search and Family Analysis
   ✅ PASSED | Duration: 0.95s | 3 tests | Quality: 76.9/100 📊 (4 issues)
   🔍 Quality Issues:
      Type Hints: 3 issue(s)
        • handle_api_report: missing type hints
        • main: missing type hints
      Complexity: 1 issue(s)
        • action11_module_tests: is too complex (complexity: 16)

🧪 [ 3/62] Testing: action6_gather.py
   📝 - Gather DNA Matches from Ancestry
   ✅ PASSED | Duration: 0.79s | 7 tests | Quality: 28.7/100 ⚠️ (13 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _main_page_processing_loop: is too complex (complexity: 12)
        • _prepare_bulk_db_data: is too complex (complexity: 11)
      ... and 8 more issues

🧪 [ 4/62] Testing: action7_inbox.py
   📝 Intelligent Inbox Processing & AI-Powered Message Classification
   ✅ PASSED | Duration: 2.25s | 4 tests | Quality: 82.3/100 📊 (3 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • _get_all_conversations_api: is too complex (complexity: 12)
        • _process_inbox_loop: is too complex (complexity: 106)
      Length: 1 issue(s)
        • _process_inbox_loop: is too long (758 lines)

🧪 [ 5/62] Testing: action8_messaging.py
   📝 Intelligent Messaging Automation & Personalization Engine
   ✅ PASSED | Duration: 0.96s | 3 tests | Quality: 73.4/100 📊 (5 issues)
   🔍 Quality Issues:
      Complexity: 4 issue(s)
        • send_messages_to_matches: is too complex (complexity: 39)
        • action8_messaging_tests: is too complex (complexity: 26)
      Length: 1 issue(s)
        • action8_messaging_tests: is too long (537 lines)

🧪 [ 6/62] Testing: action9_process_productive.py
   📝 Action 9: Productive DNA Match Processing
   ✅ PASSED | Duration: 2.70s | 8 tests | Quality: 38.1/100 ⚠️ (10 issues)
   🔍 Quality Issues:
      Type Hints: 5 issue(s)
        • get_gedcom_data: missing type hints
        • ensure_list_of_strings: missing type hints
      ... and 5 more issues

🧪 [ 7/62] Testing: adaptive_rate_limiter.py
   📝 Adaptive Rate Limiting & Intelligent API Throttling Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 94.1/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • test_regression_prevention_rate_limiter_caching: is too complex (complexity: 11)

🧪 [ 8/62] Testing: ai_interface.py
   📝 AI Intelligence & Genealogical Content Analysis Engine
   ✅ PASSED | Duration: 2.00s | 10 tests | Quality: 75.9/100 📊 (4 issues)
   🔍 Quality Issues:
      Complexity: 4 issue(s)
        • test_configuration: is too complex (complexity: 12)
        • test_prompt_loading: is too complex (complexity: 11)

🧪 [ 9/62] Testing: ai_prompt_utils.py
   📝 AI Prompt Management - Dynamic Prompt Configuration
   ✅ PASSED | Duration: 0.16s | 6 tests | Quality: 100.0/100 ✅

🧪 [10/62] Testing: api_search_utils.py
   📝 API Search Utilities - Ancestry API Search and Retrieval
   ✅ PASSED | Duration: 1.29s | 6 tests | Quality: 88.5/100 📊 (2 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • _parse_lifespan: is too complex (complexity: 11)
        • get_api_relationship_path: is too complex (complexity: 11)

🧪 [11/62] Testing: api_utils.py
   📝 API Intelligence & Request Orchestration Engine
   ✅ PASSED | Duration: 0.80s | 18 tests | Quality: 29.1/100 ⚠️ (13 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _extract_event_from_api_details: is too complex (complexity: 13)
        • call_suggest_api: is too complex (complexity: 12)
      ... and 8 more issues

🧪 [12/62] Testing: cache.py
   📝 High-Performance Disk Caching & Intelligent Data Management Engine
   ✅ PASSED | Duration: 1.03s | 11 tests | Quality: 75.3/100 📊 (4 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • enforce_cache_size_limit: is too complex (complexity: 11)
        • cache_module_tests: is too complex (complexity: 15)
      Type Hints: 2 issue(s)
        • __init__: missing type hints
        • __init__: missing type hints

🧪 [13/62] Testing: cache_manager.py
   📝 Centralized Cache Management & Intelligent Coordination Engine
   ✅ PASSED | Duration: 0.20s | 21 tests | Quality: 86.4/100 📊 (2 issues)
   🔍 Quality Issues:
      Type Hints: 2 issue(s)
        • wrapper: missing type hints
        • wrapper: missing type hints

🧪 [14/62] Testing: chromedriver.py
   📝 Management & Browser Automation Engine
   ✅ PASSED | Duration: 0.44s | 5 tests | Quality: 100.0/100 ✅

🧪 [15/62] Testing: code_quality_checker.py
   📝 Code Quality Checker & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 1.63s | 2 tests | Quality: 100.0/100 ✅

🧪 [16/62] Testing: config.py
   📝 uration Management & Environment Orchestration Engine
   ✅ PASSED | Duration: 0.17s | 5 tests | Quality: 88.3/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • config_module_tests: is too complex (complexity: 11)

🧪 [17/62] Testing: config\config_manager.py
   📝 Enhanced Configuration Manager.
   ✅ PASSED | Duration: 0.25s | 10 tests | Quality: 75.0/100 📊 (4 issues)
   🔍 Quality Issues:
      Complexity: 4 issue(s)
        • config_manager_module_tests: is too complex (complexity: 11)
        • validate_system_requirements: is too complex (complexity: 11)

🧪 [18/62] Testing: config\config_schema.py
   📝 Configuration Schema Definitions.
   ✅ PASSED | Duration: 0.15s | 17 tests | Quality: 75.9/100 📊 (4 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • config_schema_module_tests: is too long (487 lines)
      Complexity: 3 issue(s)
        • config_schema_module_tests: is too complex (complexity: 29)
        • validate: is too complex (complexity: 16)

🧪 [19/62] Testing: config\credential_manager.py
   📝 Enhanced Credential Manager.
   ✅ PASSED | Duration: 0.22s | 15 tests | Quality: 73.2/100 📊 (4 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • credential_manager_module_tests: is too long (615 lines)
      Complexity: 1 issue(s)
        • credential_manager_module_tests: is too complex (complexity: 17)
      Type Hints: 2 issue(s)
        • clear_cache: missing type hints
        • __enter__: missing type hints

🧪 [20/62] Testing: core\api_manager.py
   📝 API Manager - Handles API interactions and user identifiers.
   ✅ PASSED | Duration: 0.24s | 7 tests | Quality: 100.0/100 ✅

🧪 [21/62] Testing: core\browser_manager.py
   📝 Browser Manager - Handles all browser/WebDriver operations.
   ✅ PASSED | Duration: 0.45s | 10 tests | Quality: 79.5/100 📊 (2 issues)
   🔍 Quality Issues:
      Type Hints: 2 issue(s)
        • __init__: missing type hints
        • __init__: missing type hints

🧪 [22/62] Testing: core\database_manager.py
   📝 Database Manager - Handles all database-related operations.
   ✅ PASSED | Duration: 0.73s | 8 tests | Quality: 87.1/100 📊 (2 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • _initialize_engine_and_session: is too complex (complexity: 13)
        • get_session_context: is too complex (complexity: 13)

🧪 [23/62] Testing: core\dependency_injection.py
   📝 Dependency Injection Framework.
   ✅ PASSED | Duration: 0.71s | 24 tests | Quality: 100.0/100 ✅

🧪 [24/62] Testing: core\error_handling.py
   📝 Standardized Error Handling Framework.
   ✅ PASSED | Duration: 0.17s | 6 tests | Quality: 32.9/100 ⚠️ (11 issues)
   🔍 Quality Issues:
      Type Hints: 5 issue(s)
        • wrapper: missing type hints
        • wrapper: missing type hints
      ... and 6 more issues

🧪 [25/62] Testing: core\logging_utils.py
   📝 Centralized Logging Utilities.
   ✅ PASSED | Duration: 0.14s | 8 tests | Quality: 93.2/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • logging_utils_module_tests: is too complex (complexity: 14)

🧪 [26/62] Testing: core\session_manager.py
   📝 Session Management & Resource Orchestration Engine
   ✅ PASSED | Duration: 1.29s | 15 tests | Quality: 38.9/100 ⚠️ (11 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • session_manager_module_tests: is too complex (complexity: 14)
        • _sync_cookies: is too complex (complexity: 13)
      Type Hints: 3 issue(s)
        • make_tab: missing type hints
        • my_profile_id: missing type hints
      ... and 6 more issues

🧪 [27/62] Testing: core\session_validator.py
   📝 Session Validator - Handles session validation and readiness checks.
   ✅ PASSED | Duration: 0.17s | 9 tests | Quality: 93.1/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • perform_readiness_checks: is too complex (complexity: 13)

🧪 [28/62] Testing: core_imports.py
   📝 Core Import System - Unified Module and Function Registry
   ✅ PASSED | Duration: 0.06s | Unknown | Quality: 100.0/100 ✅

🧪 [29/62] Testing: credentials.py
   📝 Unified Credential Management & Enterprise Security Engine
   ✅ PASSED | Duration: 0.38s | 11 tests | Quality: 48.1/100 ⚠️ (8 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • credentials_module_tests: is too complex (complexity: 13)
        • main: is too complex (complexity: 16)
      ... and 3 more issues

🧪 [30/62] Testing: database.py
   📝 - SQLAlchemy Models, Database Utilities, and Schema Management
   ✅ PASSED | Duration: 0.81s | 13 tests | Quality: 48.6/100 ⚠️ (9 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _compare_field_values: is too complex (complexity: 12)
        • create_or_update_family_tree: is too complex (complexity: 14)
      ... and 4 more issues

🧪 [31/62] Testing: dna_gedcom_crossref.py
   📝 DNA-GEDCOM Cross-Reference Intelligence & Advanced Genealogical Integration Engine
   ✅ PASSED | Duration: 0.16s | 5 tests | Quality: 100.0/100 ✅

🧪 [32/62] Testing: extraction_quality.py
   📝 Extraction Quality & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.14s | 7 tests | Quality: 76.4/100 📊 (3 issues)
   🔍 Quality Issues:
      Complexity: 3 issue(s)
        • compute_task_quality: is too complex (complexity: 17)
        • compute_extraction_quality: is too complex (complexity: 27)

🧪 [33/62] Testing: gedcom_ai_integration.py
   📝 Gedcom Ai Integration & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.15s | 5 tests | Quality: 100.0/100 ✅

🧪 [34/62] Testing: gedcom_cache.py
   📝 GEDCOM Cache Intelligence & Advanced Genealogical Data Optimization Engine
   ✅ PASSED | Duration: 0.24s | 13 tests | Quality: 73.3/100 📊 (4 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • load_gedcom_with_aggressive_caching: is too complex (complexity: 11)
        • get_health_status: is too complex (complexity: 11)
      Type Hints: 2 issue(s)
        • data: missing type hints
        • __init__: missing type hints

🧪 [35/62] Testing: gedcom_intelligence.py
   📝 Gedcom Intelligence & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.13s | 4 tests | Quality: 100.0/100 ✅

🧪 [36/62] Testing: gedcom_search_utils.py
   📝 GEDCOM Search Intelligence & Advanced Genealogical Discovery Engine
   ✅ PASSED | Duration: 0.85s | 12 tests | Quality: 88.2/100 📊 (2 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • get_gedcom_relationship_path: is too complex (complexity: 15)
        • search_frances_milne_demo: is too complex (complexity: 14)

🧪 [37/62] Testing: gedcom_utils.py
   📝 GEDCOM Processing & Genealogical Data Intelligence Engine
   ✅ PASSED | Duration: 0.57s | 6 tests | Quality: 26.3/100 ⚠️ (13 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _get_full_name: is too complex (complexity: 11)
        • fast_bidirectional_bfs: is too complex (complexity: 12)
      ... and 8 more issues

🧪 [38/62] Testing: genealogical_normalization.py
   📝 Genealogical Normalization & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.14s | 7 tests | Quality: 100.0/100 ✅

🧪 [39/62] Testing: genealogical_task_templates.py
   📝 Genealogical Research Task Intelligence & Advanced Workflow Automation Engine
   ✅ PASSED | Duration: 0.15s | 17 tests | Quality: 75.7/100 📊 (4 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • genealogical_task_templates_module_tests: is too long (485 lines)
      Complexity: 3 issue(s)
        • genealogical_task_templates_module_tests: is too complex (complexity: 19)
        • _generate_name_variations: is too complex (complexity: 11)

🧪 [40/62] Testing: health_monitor.py
   📝 Comprehensive Health Monitoring & Intelligent System Diagnostics Engine
   ✅ PASSED | Duration: 0.21s | Unknown | Quality: 77.6/100 📊 (4 issues)
   🔍 Quality Issues:
      Complexity: 4 issue(s)
        • predict_session_death_risk: is too complex (complexity: 14)
        • _check_error_rate_early_warning: is too complex (complexity: 11)

🧪 [41/62] Testing: logging_config.py
   📝 Centralized Logging Configuration & Intelligent Log Management Engine
   ✅ PASSED | Duration: 0.17s | 3 tests | Quality: 93.3/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • format: is too complex (complexity: 11)

🧪 [42/62] Testing: memory_utils.py
   📝 Memory Utilities - Lightweight memory management utilities.
   ✅ PASSED | Duration: 0.06s | Unknown | Quality: 100.0/100 ✅

🧪 [43/62] Testing: message_personalization.py
   📝 Intelligent Messaging & Communication Automation Engine
   ✅ PASSED | Duration: 0.93s | 4 tests | Quality: 75.6/100 📊 (4 issues)
   🔍 Quality Issues:
      Type Hints: 2 issue(s)
        • __init__: missing type hints
        • __init__: missing type hints
      Complexity: 2 issue(s)
        • _create_occupation_social_context: is too complex (complexity: 13)
        • _create_generational_gap_analysis: is too complex (complexity: 12)

🧪 [44/62] Testing: ms_graph_utils.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 1.15s | 6 tests | Quality: 74.1/100 📊 (3 issues)
   🔍 Quality Issues:
      Complexity: 3 issue(s)
        • acquire_token_device_flow: is too complex (complexity: 14)
        • get_todo_list_id: is too complex (complexity: 14)

🧪 [45/62] Testing: my_selectors.py
   📝 My Selectors & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.13s | 10 tests | Quality: 100.0/100 ✅

🧪 [46/62] Testing: performance_cache.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.14s | 8 tests | Quality: 77.5/100 📊 (3 issues)
   🔍 Quality Issues:
      Type Hints: 3 issue(s)
        • create_mock_gedcom_data: missing type hints
        • create_mock_filter_criteria: missing type hints

🧪 [47/62] Testing: performance_dashboard.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 100.0/100 ✅

🧪 [48/62] Testing: performance_monitor.py
   📝 Performance Intelligence & System Optimization Engine
   ✅ PASSED | Duration: 5.19s | 12 tests | Quality: 86.2/100 📊 (2 issues)
   🔍 Quality Issues:
      Type Hints: 2 issue(s)
        • wrapper: missing type hints
        • error_function: missing type hints

🧪 [49/62] Testing: performance_orchestrator.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.15s | 12 tests | Quality: 85.3/100 📊 (2 issues)
   🔍 Quality Issues:
      Type Hints: 2 issue(s)
        • decorator: missing type hints
        • wrapper: missing type hints

🧪 [50/62] Testing: performance_validation.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.39s | 11 tests | Quality: 100.0/100 ✅

🧪 [51/62] Testing: person_search.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.78s | 14 tests | Quality: 100.0/100 ✅

🧪 [52/62] Testing: prompt_telemetry.py
   📝 Prompt Telemetry & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.22s | 3 tests | Quality: 100.0/100 ✅

🧪 [53/62] Testing: quality_regression_gate.py
   📝 Quality Regression Gate & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.15s | 2 tests | Quality: 100.0/100 ✅

🧪 [54/62] Testing: relationship_utils.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.51s | 10 tests | Quality: 66.1/100 ⚠️ (6 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _determine_gedcom_relationship: is too complex (complexity: 12)
        • _parse_discovery_relationship: is too complex (complexity: 12)
      ... and 1 more issues

🧪 [55/62] Testing: research_prioritization.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 88.4/100 📊 (2 issues)
   🔍 Quality Issues:
      Complexity: 2 issue(s)
        • _calculate_conflict_priority_score: is too complex (complexity: 14)
        • _estimate_success_probability: is too complex (complexity: 29)

🧪 [56/62] Testing: security_manager.py
   📝 Security Manager & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.46s | 11 tests | Quality: 87.2/100 📊 (2 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • security_manager_module_tests: is too long (485 lines)
      Complexity: 1 issue(s)
        • migrate_env_credentials: is too complex (complexity: 13)

🧪 [57/62] Testing: selenium_utils.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.42s | 10 tests | Quality: 91.8/100 📊 (1 issues)
   🔍 Quality Issues:
      Type Hints: 1 issue(s)
        • current_url_getter: missing type hints

🧪 [58/62] Testing: standard_imports.py
   📝 Standard Imports & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.14s | 9 tests | Quality: 100.0/100 ✅

🧪 [59/62] Testing: test_framework.py
   📝 Comprehensive Testing Infrastructure & Quality Assurance Engine
   ✅ PASSED | Duration: 0.14s | 3 tests | Quality: 100.0/100 ✅

🧪 [60/62] Testing: test_utilities.py
   📝 Centralized Testing Utilities & DRY Implementation Engine
   ✅ PASSED | Duration: 0.05s | Unknown | Quality: 74.7/100 📊 (3 issues)
   🔍 Quality Issues:
      Type Hints: 3 issue(s)
        • create_composite_validator: missing type hints
        • getter: missing type hints

🧪 [61/62] Testing: universal_scoring.py
   📝 Universal Scoring & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.48s | Unknown | Quality: 90.0/100 📊 (1 issues)
   🔍 Quality Issues:
      Complexity: 1 issue(s)
        • validate_search_criteria: is too complex (complexity: 12)

🧪 [62/62] Testing: utils.py
   📝 - Core Session Management, API Requests, General Utilities
   ✅ PASSED | Duration: 0.78s | 5 tests | Quality: 21.6/100 ⚠️ (14 issues)
   🔍 Quality Issues:
      Length: 1 issue(s)
        • main: is too long (572 lines)
      Complexity: 1 issue(s)
        • main: is too complex (complexity: 36)
      Type Hints: 3 issue(s)
        • mock_make_ube: missing type hints
        • mock_make_newrelic: missing type hints
      ... and 9 more issues

============================================================
📊 FINAL TEST SUMMARY
============================================================
⏰ Duration: 77.6s
🧪 Total Tests Run: 488
✅ Passed: 62
❌ Failed: 0
📈 Success Rate: 100.0%

📋 RESULTS BY CATEGORY:
   Enhanced Modules: 62 passed, 0 failed
   Standard Modules: 0 passed, 0 failed

🎉 ALL 62 MODULES PASSED!
   Professional testing framework with 62 standardized modules complete.

