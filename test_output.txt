
ANCESTRY PROJECT - COMPREHENSIVE TEST SUITE
============================================================

🧹 LINTER: Auto-fixing all fixable linting issues...
   ⚠️  Some issues auto-fixed, checking for critical errors...
🧹 LINTER: Enforcing critical blocking rules (E722,F821,F811,F823)...
🧹 LINTER: Repository diagnostics (non-blocking summary)...
5	W293  	[*] blank-line-with-whitespace
4	PTH123	[ ] builtin-open
3	SIM115	[ ] open-file-with-context-handler
2	SIM102	[ ] collapsible-if
1	SIM103	[*] needless-bool
1	N802  	[ ] invalid-function-name
[*] fixable with `ruff check --fix`
📊 Found 63 test modules (63 with enhanced descriptions)

============================================================
🧪 RUNNING TESTS
============================================================
🔄 Running tests sequentially...

🧪 [ 1/63] Testing: action10.py
   📝 GEDCOM Analysis & Advanced Genealogical Intelligence Engine
   ✅ PASSED | Duration: 62.42s | 5 tests | Quality: 100.0/100 ✅

🧪 [ 2/63] Testing: action11.py
   📝 Action 11: Ancestry API Search and Family Analysis
   ✅ PASSED | Duration: 1.27s | 3 tests | Quality: 100.0/100 ✅

🧪 [ 3/63] Testing: action6_gather.py
   📝 action6b_v2.py - DNA Match Gatherer (Rebuilt to follow Action 6's proven patterns)
   ✅ PASSED | Duration: 0.93s | 5 tests | Quality: 61.4/100 ⚠️ (6 issues)
   🔍 Quality Issues:
      Complexity: 5 issue(s)
        • _process_pages_loop: is too complex (complexity: 20)
        • coord: is too complex (complexity: 12)
      ... and 1 more issues

🧪 [ 4/63] Testing: action7_inbox.py
   📝 Intelligent Inbox Processing & AI-Powered Message Classification
   ✅ PASSED | Duration: 2.27s | 4 tests | Quality: 100.0/100 ✅

🧪 [ 5/63] Testing: action8_messaging.py
   📝 Intelligent Messaging Automation & Personalization Engine
   ✅ PASSED | Duration: 1.28s | 3 tests | Quality: 100.0/100 ✅

🧪 [ 6/63] Testing: action9_process_productive.py
   📝 Action 9: Productive DNA Match Processing
   ✅ PASSED | Duration: 2.68s | 8 tests | Quality: 100.0/100 ✅

🧪 [ 7/63] Testing: ai_interface.py
   📝 AI Intelligence & Genealogical Content Analysis Engine
   ✅ PASSED | Duration: 2.29s | 10 tests | Quality: 100.0/100 ✅

🧪 [ 8/63] Testing: ai_prompt_utils.py
   📝 AI Prompt Management - Dynamic Prompt Configuration
   ✅ PASSED | Duration: 0.16s | 6 tests | Quality: 100.0/100 ✅

🧪 [ 9/63] Testing: api_search_utils.py
   📝 API Search Utilities - Ancestry API Search and Retrieval
   ✅ PASSED | Duration: 1.60s | 6 tests | Quality: 100.0/100 ✅

🧪 [10/63] Testing: api_utils.py
   📝 API Intelligence & Request Orchestration Engine
   ✅ PASSED | Duration: 1.11s | 18 tests | Quality: 100.0/100 ✅

🧪 [11/63] Testing: cache.py
   📝 High-Performance Disk Caching & Intelligent Data Management Engine
   ✅ PASSED | Duration: 0.60s | 11 tests | Quality: 100.0/100 ✅

🧪 [12/63] Testing: cache_manager.py
   📝 Centralized Cache Management & Intelligent Coordination Engine
   ✅ PASSED | Duration: 0.26s | 21 tests | Quality: 100.0/100 ✅

🧪 [13/63] Testing: chromedriver.py
   📝 Management & Browser Automation Engine
   ✅ PASSED | Duration: 0.66s | 5 tests | Quality: 100.0/100 ✅

🧪 [14/63] Testing: code_quality_checker.py
   📝 Code Quality Checker & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 1.39s | 2 tests | Quality: 100.0/100 ✅

🧪 [15/63] Testing: common_params.py
   📝 - Common Parameter Grouping Dataclasses
   ✅ PASSED | Duration: 0.16s | 7 tests | Quality: 100.0/100 ✅

🧪 [16/63] Testing: config.py
   📝 uration Management & Environment Orchestration Engine
   ✅ PASSED | Duration: 0.18s | 5 tests | Quality: 100.0/100 ✅

🧪 [17/63] Testing: config\config_schema.py
   📝 Configuration Schema Definitions.
   ✅ PASSED | Duration: 0.17s | 17 tests | Quality: 100.0/100 ✅

🧪 [18/63] Testing: config\credential_manager.py
   📝 Enhanced Credential Manager.
   ✅ PASSED | Duration: 0.29s | 15 tests | Quality: 100.0/100 ✅

🧪 [19/63] Testing: connection_resilience.py
   📝 - Connection Resilience & Sleep Prevention Framework
   ✅ PASSED | Duration: 0.67s | 6 tests | Quality: 100.0/100 ✅

🧪 [20/63] Testing: core\__init__.py
   📝 Core Package - Modular Session Management Architecture.
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 100.0/100 ✅

🧪 [21/63] Testing: core\api_manager.py
   📝 API Manager - Handles API interactions and user identifiers.
   ✅ PASSED | Duration: 0.49s | 7 tests | Quality: 100.0/100 ✅

🧪 [22/63] Testing: core\browser_manager.py
   📝 Browser Manager - Handles all browser/WebDriver operations.
   ✅ PASSED | Duration: 2.76s | 13 tests | Quality: 100.0/100 ✅

🧪 [23/63] Testing: core\cancellation.py
   📝 core.cancellation - Cooperative cancellation signaling for long-running actions.
   ✅ PASSED | Duration: 0.16s | 6 tests | Quality: 100.0/100 ✅

🧪 [24/63] Testing: core\database_manager.py
   📝 Database Manager - Handles all database-related operations.
   ✅ PASSED | Duration: 0.92s | 8 tests | Quality: 100.0/100 ✅

🧪 [25/63] Testing: core\dependency_injection.py
   📝 Dependency Injection Framework.
   ✅ PASSED | Duration: 0.93s | 24 tests | Quality: 100.0/100 ✅

🧪 [26/63] Testing: core\enhanced_error_recovery.py
   📝 Enhanced Error Recovery Module
   ✅ PASSED | Duration: 0.16s | 9 tests | Quality: 100.0/100 ✅

🧪 [27/63] Testing: core\error_handling.py
   📝 Standardized Error Handling Framework.
   ✅ PASSED | Duration: 0.16s | 6 tests | Quality: 100.0/100 ✅

🧪 [28/63] Testing: core\logging_utils.py
   📝 Centralized Logging Utilities.
   ✅ PASSED | Duration: 0.16s | 8 tests | Quality: 100.0/100 ✅

🧪 [29/63] Testing: core\progress_indicators.py
   📝 Core Progress Indicators Module
   ✅ PASSED | Duration: 0.29s | 7 tests | Quality: 100.0/100 ✅

🧪 [30/63] Testing: core\session_validator.py
   📝 Session Validator - Handles session validation and readiness checks.
   ✅ PASSED | Duration: 0.20s | 16 tests | Quality: 100.0/100 ✅

🧪 [31/63] Testing: core_imports.py
   📝 Core Import System - Unified Module and Function Registry
   ✅ PASSED | Duration: 0.15s | 5 tests | Quality: 100.0/100 ✅

🧪 [32/63] Testing: credentials.py
   📝 Unified Credential Management & Enterprise Security Engine
   ✅ PASSED | Duration: 0.31s | 11 tests | Quality: 100.0/100 ✅

🧪 [33/63] Testing: database.py
   📝 - SQLAlchemy Models, Database Utilities, and Schema Management
   ✅ PASSED | Duration: 1.13s | 13 tests | Quality: 100.0/100 ✅

🧪 [34/63] Testing: dna_gedcom_crossref.py
   📝 DNA-GEDCOM Cross-Reference Intelligence & Advanced Genealogical Integration Engine
   ✅ PASSED | Duration: 0.19s | 5 tests | Quality: 100.0/100 ✅

🧪 [35/63] Testing: dna_utils.py
   📝 - Universal DNA Match Utilities
   ✅ PASSED | Duration: 0.98s | 7 tests | Quality: 100.0/100 ✅

🧪 [36/63] Testing: extraction_quality.py
   📝 Extraction Quality & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.17s | 7 tests | Quality: 100.0/100 ✅

🧪 [37/63] Testing: gedcom_ai_integration.py
   📝 Gedcom Ai Integration & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.16s | 5 tests | Quality: 100.0/100 ✅

🧪 [38/63] Testing: gedcom_cache.py
   📝 GEDCOM Cache Intelligence & Advanced Genealogical Data Optimization Engine
   ✅ PASSED | Duration: 0.25s | 13 tests | Quality: 100.0/100 ✅

🧪 [39/63] Testing: gedcom_intelligence.py
   📝 Gedcom Intelligence & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 100.0/100 ✅

🧪 [40/63] Testing: gedcom_search_utils.py
   📝 GEDCOM Search Intelligence & Advanced Genealogical Discovery Engine
   ✅ PASSED | Duration: 1.22s | 12 tests | Quality: 100.0/100 ✅

🧪 [41/63] Testing: gedcom_utils.py
   📝 GEDCOM Processing & Genealogical Data Intelligence Engine
   ✅ PASSED | Duration: 0.92s | 6 tests | Quality: 100.0/100 ✅

🧪 [42/63] Testing: genealogical_normalization.py
   📝 Genealogical Normalization & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.16s | 7 tests | Quality: 100.0/100 ✅

🧪 [43/63] Testing: genealogical_task_templates.py
   📝 Genealogical Research Task Intelligence & Advanced Workflow Automation Engine
   ✅ PASSED | Duration: 0.16s | 17 tests | Quality: 100.0/100 ✅

🧪 [44/63] Testing: health_monitor.py
   📝 Comprehensive Health Monitoring & Intelligent System Diagnostics Engine
   ✅ PASSED | Duration: 0.22s | 16 tests | Quality: 100.0/100 ✅

🧪 [45/63] Testing: logging_config.py
   📝 Centralized Logging Configuration & Intelligent Log Management Engine
   ✅ PASSED | Duration: 0.16s | 3 tests | Quality: 100.0/100 ✅

🧪 [46/63] Testing: memory_utils.py
   📝 Memory Utilities - Lightweight memory management utilities.
   ✅ PASSED | Duration: 0.14s | 2 tests | Quality: 100.0/100 ✅

🧪 [47/63] Testing: message_personalization.py
   📝 Intelligent Messaging & Communication Automation Engine
   ✅ PASSED | Duration: 1.12s | 4 tests | Quality: 100.0/100 ✅

🧪 [48/63] Testing: ms_graph_utils.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 1.32s | 6 tests | Quality: 100.0/100 ✅

🧪 [49/63] Testing: my_selectors.py
   📝 My Selectors & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.15s | 10 tests | Quality: 100.0/100 ✅

🧪 [50/63] Testing: performance_cache.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.16s | 8 tests | Quality: 100.0/100 ✅

🧪 [51/63] Testing: performance_dashboard.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 100.0/100 ✅

🧪 [52/63] Testing: performance_monitor.py
   📝 Performance Intelligence & System Optimization Engine
   ✅ PASSED | Duration: 5.20s | 12 tests | Quality: 100.0/100 ✅

🧪 [53/63] Testing: performance_orchestrator.py
   📝 Performance Intelligence & Advanced System Optimization Engine
   ✅ PASSED | Duration: 0.18s | 12 tests | Quality: 100.0/100 ✅

🧪 [54/63] Testing: prompt_telemetry.py
   📝 Prompt Telemetry & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.22s | 3 tests | Quality: 100.0/100 ✅

🧪 [55/63] Testing: quality_regression_gate.py
   📝 Quality Regression Gate & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.15s | 2 tests | Quality: 100.0/100 ✅

🧪 [56/63] Testing: relationship_utils.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.86s | 10 tests | Quality: 100.0/100 ✅

🧪 [57/63] Testing: research_prioritization.py
   📝 Advanced Utility & Intelligent Service Engine
   ✅ PASSED | Duration: 0.17s | 4 tests | Quality: 100.0/100 ✅

🧪 [58/63] Testing: security_manager.py
   📝 Security Manager & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.32s | 11 tests | Quality: 100.0/100 ✅

🧪 [59/63] Testing: standard_imports.py
   📝 Standard Imports & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.16s | 9 tests | Quality: 100.0/100 ✅

🧪 [60/63] Testing: test_framework.py
   📝 Comprehensive Testing Infrastructure & Quality Assurance Engine
   ✅ PASSED | Duration: 0.15s | 3 tests | Quality: 100.0/100 ✅

🧪 [61/63] Testing: test_utilities.py
   📝 Centralized Testing Utilities & DRY Implementation Engine
   ✅ PASSED | Duration: 0.15s | 4 tests | Quality: 100.0/100 ✅

🧪 [62/63] Testing: universal_scoring.py
   📝 Universal Scoring & Advanced System Intelligence Engine
   ✅ PASSED | Duration: 0.79s | 2 tests | Quality: 100.0/100 ✅

🧪 [63/63] Testing: utils.py
   📝 - Core Session Management, API Requests, General Utilities
   ✅ PASSED | Duration: 2.12s | 5 tests | Quality: 100.0/100 ✅

============================================================
📊 FINAL TEST SUMMARY
============================================================
⏰ Duration: 107.9s
🧪 Total Tests Run: 507
✅ Passed: 63
❌ Failed: 0
📈 Success Rate: 100.0%

📋 RESULTS BY CATEGORY:
   Enhanced Modules: 63 passed, 0 failed
   Standard Modules: 0 passed, 0 failed

🎉 ALL 63 MODULES PASSED!
   Professional testing framework with 63 standardized modules complete.

